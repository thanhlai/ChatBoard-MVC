@model ChatBoard.Models.Post
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = @Html.DisplayFor(model => model.Title);
}
<div class="container margin-top-a-bit">
    <div class="row">
        <div class="[ col-xs-12 ]">
            <div class="[ panel panel-default ] panel-google-plus">
                <div class="dropdown">
                    <span class="dropdown-toggle" data-toggle="dropdown">
                        <span class="[ glyphicon glyphicon-chevron-down ]"></span>
                    </span>
                    <ul class="dropdown-menu" role="menu">
                        <li role="presentation"><a role="menuitem" tabindex="-1" href="@(Url.Action("Edit", "Post", new { id = Model.Id }))">Edit Post <i class="glyphicon glyphicon-pencil"></i></a></li>
                        <li role="presentation"><a role="menuitem" tabindex="-1" href="@(Url.Action("Delete", "Post", new { id = Model.Id }))">Delete Post <i class="glyphicon glyphicon-remove"></i></a></li>

                        <li role="presentation"><a role="menuitem" tabindex="-1" data-toggle="collapse" data-parent="#accordion" href="#collapseOne">Show/Hide Chat <i class="glyphicon glyphicon-sort"></i></a></li>

                        <li role="presentation" class="divider"></li>
                        <li role="presentation"><a role="menuitem" tabindex="-1" href="@(Url.Action("Index", "Post"))">Exit <i class="glyphicon glyphicon-log-out"></i></a></li>
                    </ul>
                </div>
                <div class="panel-google-plus-tags">
                    <ul>
                        <li>
                            @Html.DisplayFor(model => model.Tags)
                        </li>
                    </ul>
                </div>
                <div class="panel-heading">
                    <img class="[ img-thumbnail pull-left ]" src="~/Content/Images/default_avatar1.png" width="75" height="75" alt="OwnerAvatar" />
                    <h3>@Model.Owner</h3>
                    <h5><span>Shared publicly</span> - <span>@Html.DisplayFor(model => model.DateCreated)</span> </h5>
                </div>
                <div class="panel-body">
                    @Html.DisplayFor(model => model.Content)
                </div>
                <div class="panel-google-plus-comment">
                    <img class="img-circle" src="https://lh3.googleusercontent.com/uFp_tsTJboUY7kue5XAsGA=s46" alt="User Image" />
                    <div class="panel-google-plus-textarea">
                        <textarea rows="4"></textarea>
                        <button type="submit" class="[ btn btn-xs btn-success disabled ]">Post comment</button>
                        <button type="reset" class="[ btn btn-xs btn-default ]">Cancel</button>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <!-- Chat Snippet -->
                <div class="panel-collapse collapse" id="collapseOne">
                    <div class="panel-body" id="chat-panel-body">
                        <ul class="chat" id="discussion"></ul>
                    </div>
                    <div class="panel-footer">
                        <div class="input-group">
                            <input id="message" type="text" class="form-control input-sm" placeholder="Type your message here..." />
                            <span class="input-group-btn">
                                <input class="btn btn-primary btn-sm" type="button" id="sendmessage" value="Send" />
                            </span>
                        </div>
                    </div>
                </div>
                <!-- END Chat Snippet-->
            </div>
        </div>
    </div>
</div>
@if ((System.Web.HttpContext.Current.User.Identity.IsAuthenticated) && (System.Web.HttpContext.Current.User != null))
{
    @section scripts {
        @Scripts.Render("~/bundles/chat")
        <!--Script references. -->
        <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
        <!--Reference the SignalR library. -->
        <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>
        <!--SignalR script to update the chat page and send messages.-->
        <script>
            $(function () {
                // Reference the auto-generated proxy for the hub.
                var chat = $.connection.chatHub;
                var username = "@(User.Identity.GetUserName())";
                // Create a function that the hub can call back to display messages.
                chat.client.addNewMessageToPage = function (username, message) {
                    // Add the message to the page.
                    var avatar = "/Content/Images/default_avatar2.png";
                    //Interpret smileys
                    message = message.replace(":)", "<img src=\"/Content/Images/default_avatar9.jpg\" class=\"smileys\" width=\"36\" height=\"36\" />");
                    $('#discussion').append('<li class="left clearfix">'
                    + '<span class="chat-img pull-left">'
                    + '<img src=' + avatar + ' width="50" height="50" alt="User Avatar" class="img-thumbnail" />'
                    + '</span>'
                    + '<div class="chat-body clearfix">'
                    + '<div class="header">'
                    + '<strong class="primary-font">' + username + '</strong>'
                    + '</div>'
                    + '<p>' + message + '</p>'
                    + '</div>'
                    + '</li>').each(function () { scrollChat(); });
                };
                // Set initial focus to message input box.
                $('‪#‎message‬').focus();
                // Start the connection.
                $.connection.hub.start().done(function () {
                    $('#sendmessage').click(function () {
                        // Call the Send method on the hub.
                        if ($('#message').val().trim() != '') {
                            chat.server.send(username, $('#message').val());
                            // Clear text box and reset focus for next comment.
                            $('#message').val('').focus();
                        }
                    });
                    document.onkeypress = function (e) {
                        if (e.keyCode == 13) {
                            if ($('#message').val().trim() != '') {
                                chat.server.send(username, $('#message').val());
                                $('#message').val('').focus();
                            }
                        }
                    }
                });
                function scrollChat() {
                    var buklau = $("#chat-panel-body");
                    var discussion = $("#discussion");
                    buklau.scrollTop(discussion[0].scrollHeight);
                }
            });
        </script>
    }
}
else
{
    @section scripts {
        @Scripts.Render("~/bundles/chat")
        <!--Script references. -->
        <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
        <!--Reference the SignalR library. -->
        <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>
        <!--SignalR script to update the chat page and send messages.-->
        <script>
            $(function () {
                // Reference the auto-generated proxy for the hub.
                var chat = $.connection.chatHub;
                var username = 'Anonymous';
                // Create a function that the hub can call back to display messages.
                chat.client.addNewMessageToPage = function (username, message) {
                    // Add the message to the page.
                    var avatar = "/Content/Images/default_avatar2.png";
                    $('#discussion').append('<li class="left clearfix">'
                    + '<span class="chat-img pull-left">'
                    + '<img src=' + avatar + ' width="50" height="50" alt="User Avatar" class="img-thumbnail" />'
                    + '</span>'
                    + '<div class="chat-body clearfix">'
                    + '<div class="header">'
                    + '<strong class="primary-font">' + username + '</strong>'
                    + '</div>'
                    + '<p>' + message + '</p>'
                    + '</div>'
                    + '</li>').each(function () { scrollChat(); });
                };
                // Set initial focus to message input box.
                $('‪#‎message‬').focus();
                // Start the connection.
                $.connection.hub.start().done(function () {
                    $('#sendmessage').click(function () {
                        // Call the Send method on the hub.
                        if ($('#message').val().trim() != '') {
                            chat.server.send('Anonymous', $('#message').val());
                            // Clear text box and reset focus for next comment.
                            $('#message').val('').focus();
                        }
                    });
                    document.onkeypress = function (e) {
                        if (e.keyCode == 13) {
                            if ($('#message').val().trim() != '') {
                                chat.server.send('Guest', $('#message').val());
                                $('#message').val('').focus();
                            }
                        }
                    }
                });

                function scrollChat() {
                    var buklau = $("#chat-panel-body");
                    var discussion = $("#discussion");
                    buklau.scrollTop(discussion[0].scrollHeight);
                }
            });
        </script>
    }
}